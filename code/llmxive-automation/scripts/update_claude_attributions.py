#!/usr/bin/env python3
"""Update attributions to reflect Claude Sonnet as the generator of ideas"""

import os
import sys
import json
from datetime import datetime

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from src.github_handler import GitHubHandler


def add_claude_attribution_comment(issue_number: int, github: GitHubHandler):
    """Add Claude Sonnet attribution comment to an issue"""
    
    attribution_comment = """## ðŸ¤– Model Attribution

This contribution was generated by: **Claude 3 Sonnet**

### Model Details
- Full Model ID: `claude-3-sonnet-20240229`
- Model Provider: Anthropic
- Task Type: `BRAINSTORM_IDEA`
- Attribution Note: This idea was generated during the initial llmXive ideation phase

---
*Attribution added retroactively by llmXive Model Attribution System*"""
    
    success = github.create_issue_comment(issue_number, attribution_comment)
    if success:
        print(f"âœ“ Added attribution to issue #{issue_number}")
    else:
        print(f"âœ— Failed to add attribution to issue #{issue_number}")
    
    return success


def update_attribution_file():
    """Update the attribution JSON file with Claude Sonnet attributions"""
    
    attribution_file = "model_attributions.json"
    
    # Create new attribution data
    new_attributions = {
        "models": {
            "claude-3-sonnet-20240229": {
                "first_contribution": "2025-07-04T00:00:00.000000",
                "total_contributions": 7,  # Issues 22-28
                "contributions_by_type": {
                    "idea": 7
                },
                "last_contribution": "2025-07-04T15:51:51.000000"
            }
        },
        "contributions": []
    }
    
    # Add contributions for issues 22-28
    issues = [
        (22, "arts and humanities", "The Use of Machine Learning Algorithms to Analyze Historical Texts and Preserve Cultural Heritage"),
        (23, "physics", "Quantum Machine Learning Approaches to Understanding Superconductivity"),
        (24, "engineering", "Developing new methods to synthesize high-performance membranes using sustainable materials"),
        (25, "ocean science", "Understanding Oceanic Phytoplankton Communities through Remote Sensing Techniques"),
        (26, "neuroscience", "The Role of Mindfulness in Improving Social Skills Among Children with Autism Spectrum Disorder"),
        (27, "agriculture", "The Use of Climate-Smart Agricultural Practices in Rural Areas to Improve Crop Yields and Reduce Environmental Footprint"),
        (28, "environmental science", "Investigating the Potential Benefits of Ecotourism in Regenerating Deforested Areas")
    ]
    
    for issue_num, field, title in issues:
        contribution = {
            "id": f"claude-3-sonnet-20240229_{issue_num}",
            "model_id": "claude-3-sonnet-20240229",
            "timestamp": f"2025-07-04T{15 + (issue_num - 22) * 0.1:05.2f}:00.000000",
            "task_type": "BRAINSTORM_IDEA",
            "contribution_type": "idea",
            "reference": f"issue-{issue_num}",
            "metadata": {
                "field": field,
                "idea_title": title,
                "attribution_note": "Generated during initial llmXive ideation phase"
            }
        }
        new_attributions["contributions"].append(contribution)
    
    # Save the updated attribution file
    with open(attribution_file, 'w') as f:
        json.dump(new_attributions, f, indent=2)
    
    print(f"\nâœ“ Updated {attribution_file} with Claude Sonnet attributions")


def main():
    """Main function to update attributions"""
    
    print("Updating llmXive attributions to reflect Claude Sonnet as idea generator...")
    print("(All ideas except issue #21 were generated by Claude Sonnet)")
    print("="*60)
    
    # Initialize GitHub handler
    token = os.environ.get('GITHUB_TOKEN')
    if not token:
        print("\nNote: GITHUB_TOKEN not set. Attempting to use GitHub CLI...")
    
    github = GitHubHandler(token=token, repo_name="ContextLab/llmXive")
    
    # Add attribution comments to issues 22-28
    print("\nAdding attribution comments to GitHub issues...")
    issues_to_attribute = [22, 23, 24, 25, 26, 27, 28]
    
    for issue_num in issues_to_attribute:
        add_claude_attribution_comment(issue_num, github)
    
    # Update the attribution file
    print("\nUpdating attribution file...")
    update_attribution_file()
    
    print("\n" + "="*60)
    print("Attribution update complete!")
    print("\nNote: Issue #21 was not updated as it was not generated by Claude Sonnet")


if __name__ == "__main__":
    main()